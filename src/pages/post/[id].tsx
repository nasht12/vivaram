import Head from "next/head";
import { PostLayout } from "~/components/layout";
import { LoadingPage } from "~/components/loading";
import { api } from "~/utils/api";
import { useRouter } from 'next/router'
import Image from "next/image";
import dayjs from 'dayjs'

export default function PostPage() {

  const router = useRouter();

  // const queryKey = 'id';
  // const queryValue = router.query[queryKey] || router.asPath.match(new RegExp(`[&?]${queryKey}=(.*)(&|$)`))
  let postId = router.query["id"];

  if(!postId) return
  if (Array.isArray(postId)) {
    postId = postId[0];
  }
  if (typeof postId !== 'string') {
        // Here you can decide what to do when `id` is not a string.
        // You might want to throw an error, return, set a default value, etc.
        throw new Error("ID must be a string");
      }
 
  const { data, isLoading } = api.posts.get.useQuery({ id: postId})


  if(!data || isLoading) return <LoadingPage />

  console.log('data', data)

  return (
    <>
      <Head>
        <title>Post View</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <PostLayout>
        <div className = "flex justify-center items-center h-screen border-t-2 border-black p-4">
          <div className="w-1/2 h-full flex flex-col items-center justify-center bg-white-200 pl-16">
            <h1 className="text-4xl font-bold flex items-start">{data.title}</h1>
          </div>
          <div className="w-1/2 h-full w-full flex items-center justify-center">
            <Image src={data.imageUrl || "alt"} className="max-w-full h-auto" alt="pic" width="800" height="600" />
          </div>
        </div>
        <div className="border-t-2 border-black p-4">
          <h1 className="text-xs">{`${dayjs(data.createdAt).format('MMMM D, YYYY')}`}</h1>
          <h1 className="text-xl bg-black text-white p-2 leading-none align-middle">Abhinash Tummala</h1>
        </div>
        <p className="py-6">{data.content}</p>
    </PostLayout>
    </>
  );
}
